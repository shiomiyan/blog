---
import Layout from "@layouts/Layout.astro";
import Container from "@components/Container.astro";
import Tag from "@components/Tag.astro";
import { getCollectionByCollectionKeys } from "@lib/utils";
import { TAGS } from "@/constants";

const posts = await getCollectionByCollectionKeys("posts", "zenn", "qiita");

const tagCounts = posts
	.flatMap((post) => post.data.tags)
	.reduce(
		(acc, tag) => {
			if (tag) {
				acc[tag] = (acc[tag] || 0) + 1;
			}
			return acc;
		},
		{} as Record<string, number>
	);

const tags = Object.keys(TAGS)
	.map((slug) => ({
		name: TAGS[slug as keyof typeof TAGS],
		slug,
		count: tagCounts[slug] || 0,
	}))
	.filter((tag) => tag.count > 0)
	.sort((a, b) => a.name.localeCompare(b.name));

const meta = {
	description: "A list of all tags",
	title: "tag index",
};
---

<Layout title={meta.title} description={meta.description}>
	<Container>
		<div class="space-y-10" data-pagefind-ignore="all">
			<div class="space-y-4">
				<section class="space-y-4">
					<ul
						class="grid list-none grid-cols-2 gap-2 md:grid-cols-3 lg:grid-cols-4"
					>
						{
							tags.map((tag) => (
								<li>
									<Tag tag={tag.slug as keyof typeof TAGS} count={tag.count} />
								</li>
							))
						}
					</ul>
				</section>
			</div>
		</div>
	</Container>
</Layout>
